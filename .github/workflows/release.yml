name: goreleaser

on:
  push:
    # run only against tags
    tags:
      - 'v*'

permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

env:
  CONTROLLER: ${{ github.event.repository.name }}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup Syft
        uses: anchore/sbom-action/download-syft@v0
      #- name: Login to GitHub Container Registry
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
      #    username: kluctlbot
      #    password: ${{ secrets.GHCR_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-goreleaser-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-goreleaser-
      - name: Generate release artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p config/release
          kustomize build ./config/crd > ./config/release/${{ env.CONTROLLER }}.crds.yaml
          kustomize build ./config/manager > ./config/release/${{ env.CONTROLLER }}.deployment.yaml
          echo '[CHANGELOG](https://github.com/kluctl/${{ env.CONTROLLER }}/blob/main/CHANGELOG.md)' > ./config/release/notes.md
      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --release-notes=config/release/notes.md --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  chartreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/checkout@v1
      - name: Set-Env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set-Version
        run: |
          escaped_version=$(printf '%s\n' "${{ env.RELEASE_VERSION }}" | sed -e 's/[\/.]/\\./g')
          sed -i "s/appVersion\: \"0\.0\.0\"/appVersion\: \"$escaped_version\"/" charts/flux-kluctl-controller/Chart.yaml
      - name: Copy-CRDs
        run: |
          make copy-crds
      - name: Run chart-releaser
        if: startsWith(github.ref, 'refs/tags/v')
        uses: helm/chart-releaser-action@v1.0.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
