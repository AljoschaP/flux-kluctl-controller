---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kluctlprojects.kluctl.io
spec:
  group: kluctl.io
  names:
    kind: KluctlProject
    listKind: KluctlProjectList
    plural: kluctlprojects
    singular: kluctlproject
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KluctlProject is the Schema for the kluctlprojects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KluctlProjectSpec defines the desired state of KluctlProject
            properties:
              interval:
                description: Interval at which to check the KluctlProject and all
                  involved repos for updates.
                type: string
              ref:
                description: Reference specifies the Git reference to resolve and
                  monitor for changes, defaults to the default branch.
                type: string
              secretRef:
                description: SecretRef specifies the Secret containing authentication
                  credentials for the KluctlProject. The same credentials are used
                  for all involved repos. For HTTPS repositories the Secret must contain
                  'username' and 'password' fields. For SSH repositories the Secret
                  must contain 'identity', 'identity.pub' and 'known_hosts' fields.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              suspend:
                description: Suspend tells the controller to suspend the reconciliation
                  of this KluctlProject.
                type: boolean
              timeout:
                default: 60s
                description: Timeout for Git operations like cloning, defaults to
                  60s.
                type: string
              url:
                description: URL specifies the Git repository URL, it can be an HTTP/S
                  or SSH address.
                pattern: ^(http|https|ssh)://
                type: string
            required:
            - interval
            - url
            type: object
          status:
            description: KluctlProjectStatus defines the observed state of KluctlProject
            properties:
              archiveInfo:
                description: ArchiveInfo holds infos about the archive
                properties:
                  archiveHash:
                    description: ArchiveHash is the hash of archive.tar.gz
                    type: string
                  involvedRepos:
                    description: InvolvedRepos is a list of repositories and refs
                      involved with this KluctlProject
                    items:
                      description: InvolvedRepo represents a git repository and all
                        involved refs
                      properties:
                        patterns:
                          description: Patterns is a list of pattern+refs combinations
                          items:
                            description: InvolvedRepoPattern represents a ref pattern
                              and the found refs
                            properties:
                              pattern:
                                description: Pattern is a regex to filter refs
                                type: string
                              refs:
                                additionalProperties:
                                  type: string
                                description: Refs is the filtered list of refs
                                type: object
                            required:
                            - pattern
                            - refs
                            type: object
                          type: array
                        url:
                          description: URL is the url of the involved git repository
                          type: string
                      required:
                      - patterns
                      - url
                      type: object
                    type: array
                  metadataHash:
                    description: MetdataHash is the hash of metadata.yml
                    type: string
                  targets:
                    description: Targets is a list of targets found in the KluctlProject
                    items:
                      properties:
                        name:
                          description: Name is the name of the target
                          type: string
                        targetHash:
                          description: TargetHash is the hash of the target configuration
                          type: string
                      required:
                      - name
                      - targetHash
                      type: object
                    type: array
                required:
                - archiveHash
                - involvedRepos
                - metadataHash
                - targets
                type: object
              artifact:
                description: Artifact represents the last successful KluctlProject
                  reconciliation.
                properties:
                  checksum:
                    description: Checksum is the SHA256 checksum of the Artifact file.
                    type: string
                  lastUpdateTime:
                    description: LastUpdateTime is the timestamp corresponding to
                      the last update of the Artifact.
                    format: date-time
                    type: string
                  path:
                    description: Path is the relative file path of the Artifact. It
                      can be used to locate the file in the root of the Artifact storage
                      on the local file system of the controller managing the Source.
                    type: string
                  revision:
                    description: Revision is a human-readable identifier traceable
                      in the origin source system. It can be a Git commit SHA, Git
                      tag, a Helm chart version, etc.
                    type: string
                  size:
                    description: Size is the number of bytes in the file.
                    format: int64
                    type: integer
                  url:
                    description: URL is the HTTP address of the Artifact as exposed
                      by the controller managing the Source. It can be used to retrieve
                      the Artifact for consumption, e.g. by another controller applying
                      the Artifact contents.
                    type: string
                required:
                - path
                - url
                type: object
              conditions:
                description: Conditions holds the conditions for the KluctlProject.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastHandledReconcileAt:
                description: LastHandledReconcileAt holds the value of the most recent
                  reconcile request value, so a change of the annotation value can
                  be detected.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last observed generation of
                  the KluctlProject object.
                format: int64
                type: integer
              url:
                description: URL is the dynamic fetch link for the latest Artifact.
                  It is provided on a "best effort" basis, and using the precise KluctlProjectStatus.Artifact
                  data is recommended.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
